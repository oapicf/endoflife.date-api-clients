/**
 * endoflife.date
 * Documentation for the endoflife.date API. The API is currently in Alpha. Additional information about the API can be found on the [endoflife.date wiki](https://github.com/endoflife-date/endoflife.date/wiki)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.OasAnyTypeNotMapped;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Details of a single release cycle of a given product. There might be some slight variations to this depending on the product.
 **/
@ApiModel(description = "Details of a single release cycle of a given product. There might be some slight variations to this depending on the product.")
public class Cycle {

  @SerializedName("cycle")
  private OasAnyTypeNotMapped cycle = null;
  @SerializedName("releaseDate")
  private OasAnyTypeNotMapped releaseDate = null;
  @SerializedName("eol")
  private OasAnyTypeNotMapped eol = null;
  @SerializedName("latest")
  private OasAnyTypeNotMapped latest = null;
  @SerializedName("link")
  private OasAnyTypeNotMapped link = null;
  @SerializedName("lts")
  private OasAnyTypeNotMapped lts = null;
  @SerializedName("support")
  private OasAnyTypeNotMapped support = null;
  @SerializedName("discontinued")
  private OasAnyTypeNotMapped discontinued = null;

  /**
   * Release Cycle
   **/
  @ApiModelProperty(value = "Release Cycle")
  public OasAnyTypeNotMapped getCycle() {
    return cycle;
  }
  public void setCycle(OasAnyTypeNotMapped cycle) {
    this.cycle = cycle;
  }

  /**
   * Release Date for the first release in this cycle
   **/
  @ApiModelProperty(value = "Release Date for the first release in this cycle")
  public OasAnyTypeNotMapped getReleaseDate() {
    return releaseDate;
  }
  public void setReleaseDate(OasAnyTypeNotMapped releaseDate) {
    this.releaseDate = releaseDate;
  }

  /**
   * End of Life Date for this release cycle
   **/
  @ApiModelProperty(value = "End of Life Date for this release cycle")
  public OasAnyTypeNotMapped getEol() {
    return eol;
  }
  public void setEol(OasAnyTypeNotMapped eol) {
    this.eol = eol;
  }

  /**
   * Latest release in this cycle
   **/
  @ApiModelProperty(value = "Latest release in this cycle")
  public OasAnyTypeNotMapped getLatest() {
    return latest;
  }
  public void setLatest(OasAnyTypeNotMapped latest) {
    this.latest = latest;
  }

  /**
   * Link to changelog for the latest release, if available
   **/
  @ApiModelProperty(value = "Link to changelog for the latest release, if available")
  public OasAnyTypeNotMapped getLink() {
    return link;
  }
  public void setLink(OasAnyTypeNotMapped link) {
    this.link = link;
  }

  /**
   * Whether this release cycle has long-term-support (LTS). Can be a date instead in YYYY-MM-DD format as well if the release enters LTS status on a given date.
   **/
  @ApiModelProperty(value = "Whether this release cycle has long-term-support (LTS). Can be a date instead in YYYY-MM-DD format as well if the release enters LTS status on a given date. ")
  public OasAnyTypeNotMapped getLts() {
    return lts;
  }
  public void setLts(OasAnyTypeNotMapped lts) {
    this.lts = lts;
  }

  /**
   * Whether this release cycle has active support
   **/
  @ApiModelProperty(value = "Whether this release cycle has active support")
  public OasAnyTypeNotMapped getSupport() {
    return support;
  }
  public void setSupport(OasAnyTypeNotMapped support) {
    this.support = support;
  }

  /**
   * Whether this cycle is now discontinued.
   **/
  @ApiModelProperty(value = "Whether this cycle is now discontinued.")
  public OasAnyTypeNotMapped getDiscontinued() {
    return discontinued;
  }
  public void setDiscontinued(OasAnyTypeNotMapped discontinued) {
    this.discontinued = discontinued;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Cycle cycle = (Cycle) o;
    return (this.cycle == null ? cycle.cycle == null : this.cycle.equals(cycle.cycle)) &&
        (this.releaseDate == null ? cycle.releaseDate == null : this.releaseDate.equals(cycle.releaseDate)) &&
        (this.eol == null ? cycle.eol == null : this.eol.equals(cycle.eol)) &&
        (this.latest == null ? cycle.latest == null : this.latest.equals(cycle.latest)) &&
        (this.link == null ? cycle.link == null : this.link.equals(cycle.link)) &&
        (this.lts == null ? cycle.lts == null : this.lts.equals(cycle.lts)) &&
        (this.support == null ? cycle.support == null : this.support.equals(cycle.support)) &&
        (this.discontinued == null ? cycle.discontinued == null : this.discontinued.equals(cycle.discontinued));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.cycle == null ? 0: this.cycle.hashCode());
    result = 31 * result + (this.releaseDate == null ? 0: this.releaseDate.hashCode());
    result = 31 * result + (this.eol == null ? 0: this.eol.hashCode());
    result = 31 * result + (this.latest == null ? 0: this.latest.hashCode());
    result = 31 * result + (this.link == null ? 0: this.link.hashCode());
    result = 31 * result + (this.lts == null ? 0: this.lts.hashCode());
    result = 31 * result + (this.support == null ? 0: this.support.hashCode());
    result = 31 * result + (this.discontinued == null ? 0: this.discontinued.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Cycle {\n");

    sb.append("  cycle: ").append(cycle).append("\n");
    sb.append("  releaseDate: ").append(releaseDate).append("\n");
    sb.append("  eol: ").append(eol).append("\n");
    sb.append("  latest: ").append(latest).append("\n");
    sb.append("  link: ").append(link).append("\n");
    sb.append("  lts: ").append(lts).append("\n");
    sb.append("  support: ").append(support).append("\n");
    sb.append("  discontinued: ").append(discontinued).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
