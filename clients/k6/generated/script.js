/*
 * endoflife.date
 * Documentation for the endoflife.date API. The API is currently in Alpha. Additional information about the API can be found on the [endoflife.date wiki](https://github.com/endoflife-date/endoflife.date/wiki)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * Generator version: 7.9.0
 */


import http from "k6/http";
import { group, check, sleep } from "k6";

const BASE_URL = "https://endoflife.date";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.

export default function() {
    group("/api/{product}/{cycle}.json", () => {
        let product = 'TODO_EDIT_THE_PRODUCT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let cycle = 'TODO_EDIT_THE_CYCLE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: get-api-:product-:cycle.json
        {
            let url = BASE_URL + `/api/${product}/${cycle}.json`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/api/{product}.json", () => {
        let product = 'TODO_EDIT_THE_PRODUCT'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: get-api-:product.json
        {
            let url = BASE_URL + `/api/${product}.json`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/api/all.json", () => {

        // Request No. 1: get-api-all.json
        {
            let url = BASE_URL + `/api/all.json`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

}
