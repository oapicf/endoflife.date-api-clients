/**
 * endoflife.date
 * Documentation for the endoflife.date API. The API is currently in Alpha. Additional information about the API can be found on the [endoflife.date wiki](https://github.com/endoflife-date/endoflife.date/wiki)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICycle.h
 *
 * Details of a single release cycle of a given product. There might be some slight variations to this depending on the product.
 */

#ifndef OAICycle_H
#define OAICycle_H

#include <QJsonObject>

#include "OAIAnyType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICycle : public OAIObject {
public:
    OAICycle();
    OAICycle(QString json);
    ~OAICycle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAnyType getCycle() const;
    void setCycle(const OAIAnyType &cycle);
    bool is_cycle_Set() const;
    bool is_cycle_Valid() const;

    OAIAnyType getReleaseDate() const;
    void setReleaseDate(const OAIAnyType &release_date);
    bool is_release_date_Set() const;
    bool is_release_date_Valid() const;

    OAIAnyType getEol() const;
    void setEol(const OAIAnyType &eol);
    bool is_eol_Set() const;
    bool is_eol_Valid() const;

    OAIAnyType getLatest() const;
    void setLatest(const OAIAnyType &latest);
    bool is_latest_Set() const;
    bool is_latest_Valid() const;

    OAIAnyType getLink() const;
    void setLink(const OAIAnyType &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    OAIAnyType getLts() const;
    void setLts(const OAIAnyType &lts);
    bool is_lts_Set() const;
    bool is_lts_Valid() const;

    OAIAnyType getSupport() const;
    void setSupport(const OAIAnyType &support);
    bool is_support_Set() const;
    bool is_support_Valid() const;

    OAIAnyType getDiscontinued() const;
    void setDiscontinued(const OAIAnyType &discontinued);
    bool is_discontinued_Set() const;
    bool is_discontinued_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAnyType cycle;
    bool m_cycle_isSet;
    bool m_cycle_isValid;

    OAIAnyType release_date;
    bool m_release_date_isSet;
    bool m_release_date_isValid;

    OAIAnyType eol;
    bool m_eol_isSet;
    bool m_eol_isValid;

    OAIAnyType latest;
    bool m_latest_isSet;
    bool m_latest_isValid;

    OAIAnyType link;
    bool m_link_isSet;
    bool m_link_isValid;

    OAIAnyType lts;
    bool m_lts_isSet;
    bool m_lts_isValid;

    OAIAnyType support;
    bool m_support_isSet;
    bool m_support_isValid;

    OAIAnyType discontinued;
    bool m_discontinued_isSet;
    bool m_discontinued_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICycle)

#endif // OAICycle_H
