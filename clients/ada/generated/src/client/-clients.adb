--  endoflife.date
--  Documentation for the endoflife.date API. The API is currently in Alpha. Additional information about the API can be found on the [endoflife.date wiki](https://github.com/endoflife_date/endoflife.date/wiki)
--
--  The version of the OpenAPI document: 0.0.1
--  Contact: blah+oapicf@cliffano.com
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.0.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

pragma Warnings (Off, "*is not referenced");
with Swagger.Streams;
package body .Clients is
   pragma Style_Checks ("-bmrIu");

   Media_List_1 : constant Swagger.Mime_List := (
     1 => Swagger.Mime_Json   );


   --  All Products
   --  Return a list of all products. Each of these can be used for the other API endpoints.
   procedure Get_Api_All_Json
      (Client : in out Client_Type;
       Result : out .Models.AnyType_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/all.json");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Api_All_Json;

   --  Single cycle details
   --  Gets details of a single cycle
   procedure Get_Api_Product_Cycle_Json
      (Client : in out Client_Type;
       Product : in .Models..Models.AnyType_Type;
       Cycle : in .Models..Models.AnyType_Type;
       Result : out .Models.Cycle_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/{product}/{cycle}.json");
      URI.Set_Path_Param ("product", .Models.To_String (Product));
      URI.Set_Path_Param ("cycle", .Models.To_String (Cycle));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Api_Product_Cycle_Json;

   --  Get All Details
   --  Get EoL dates of all cycles of a given product.
   procedure Get_Api_Product_Json
      (Client : in out Client_Type;
       Product : in .Models..Models.AnyType_Type;
       Result : out .Models.AnyType_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/{product}.json");
      URI.Set_Path_Param ("product", .Models.To_String (Product));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Api_Product_Json;
end .Clients;
