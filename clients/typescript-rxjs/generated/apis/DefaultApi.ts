// tslint:disable
/**
 * endoflife.date
 * Documentation for the endoflife.date API. The API is currently in Alpha. Additional information about the API can be found on the [endoflife.date wiki](https://github.com/endoflife-date/endoflife.date/wiki)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts } from '../runtime';
import type {
    Cycle,
} from '../models';

export interface GetApiProductCycleJsonRequest {
    product: string;
    cycle: string;
}

export interface GetApiProductJsonRequest {
    product: string;
}

/**
 * no description
 */
export class DefaultApi extends BaseAPI {

    /**
     * Return a list of all products. Each of these can be used for the other API endpoints.
     * All Products
     */
    getApiAllJson(): Observable<Array<string>>
    getApiAllJson(opts?: OperationOpts): Observable<AjaxResponse<Array<string>>>
    getApiAllJson(opts?: OperationOpts): Observable<Array<string> | AjaxResponse<Array<string>>> {
        return this.request<Array<string>>({
            url: '/api/all.json',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets details of a single cycle
     * Single cycle details
     */
    getApiProductCycleJson({ product, cycle }: GetApiProductCycleJsonRequest): Observable<Cycle>
    getApiProductCycleJson({ product, cycle }: GetApiProductCycleJsonRequest, opts?: OperationOpts): Observable<AjaxResponse<Cycle>>
    getApiProductCycleJson({ product, cycle }: GetApiProductCycleJsonRequest, opts?: OperationOpts): Observable<Cycle | AjaxResponse<Cycle>> {
        throwIfNullOrUndefined(product, 'product', 'getApiProductCycleJson');
        throwIfNullOrUndefined(cycle, 'cycle', 'getApiProductCycleJson');

        return this.request<Cycle>({
            url: '/api/{product}/{cycle}.json'.replace('{product}', encodeURI(product)).replace('{cycle}', encodeURI(cycle)),
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Get EoL dates of all cycles of a given product.
     * Get All Details
     */
    getApiProductJson({ product }: GetApiProductJsonRequest): Observable<Array<Cycle>>
    getApiProductJson({ product }: GetApiProductJsonRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<Cycle>>>
    getApiProductJson({ product }: GetApiProductJsonRequest, opts?: OperationOpts): Observable<Array<Cycle> | AjaxResponse<Array<Cycle>>> {
        throwIfNullOrUndefined(product, 'product', 'getApiProductJson');

        return this.request<Array<Cycle>>({
            url: '/api/{product}.json'.replace('{product}', encodeURI(product)),
            method: 'GET',
        }, opts?.responseOpts);
    };

}
