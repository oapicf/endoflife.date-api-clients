/*
 * endoflife.date
 * Documentation for the endoflife.date API. The API is currently in Alpha. Additional information about the API can be found on the [endoflife.date wiki](https://github.com/endoflife-date/endoflife.date/wiki)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.endoflifedate.api;

import com.github.oapicf.endoflifedate.ApiException;
import com.github.oapicf.endoflifedate.model.Cycle;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * All Products
     *
     * Return a list of all products. Each of these can be used for the other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApiAllJsonTest() throws ApiException {
        List<String> response = api.getApiAllJson();
        // TODO: test validations
    }

    /**
     * Single cycle details
     *
     * Gets details of a single cycle
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApiProductCycleJsonTest() throws ApiException {
        String product = null;
        String cycle = null;
        Cycle response = api.getApiProductCycleJson(product, cycle);
        // TODO: test validations
    }

    /**
     * Get All Details
     *
     * Get EoL dates of all cycles of a given product.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApiProductJsonTest() throws ApiException {
        String product = null;
        List<Cycle> response = api.getApiProductJson(product);
        // TODO: test validations
    }

}
