/*
 * endoflife.date
 *
 * Documentation for the endoflife.date API. The API is currently in Alpha. Additional information about the API can be found on the [endoflife.date wiki](https://github.com/endoflife-date/endoflife.date/wiki)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DefaultApiController : ControllerBase
    { 
        /// <summary>
        /// All Products
        /// </summary>
        /// <remarks>Return a list of all products. Each of these can be used for the other API endpoints.</remarks>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/api/all.json")]
        [ValidateModelState]
        [SwaggerOperation("GetApiAllJson")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<string>), description: "OK")]
        public virtual IActionResult GetApiAllJson()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<string>));
            string exampleJson = null;
            exampleJson = "[ \"\", \"\" ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<string>>(exampleJson)
            : default(List<string>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Single cycle details
        /// </summary>
        /// <remarks>Gets details of a single cycle</remarks>
        /// <param name="product">Product URL as per the canonical URL on the endofife.date website</param>
        /// <param name="cycle">Release Cycle for which the details must be fetched. Any slash character in the cycle name will be replaced with dashes. For example FreeBSD&#39;s releng/14.0 becomes releng-14.0.</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/api/{product}/{cycle}.json")]
        [ValidateModelState]
        [SwaggerOperation("GetApiProductCycleJson")]
        [SwaggerResponse(statusCode: 200, type: typeof(Cycle), description: "OK")]
        public virtual IActionResult GetApiProductCycleJson([FromRoute (Name = "product")][Required]string product, [FromRoute (Name = "cycle")][Required]string cycle)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Cycle));
            string exampleJson = null;
            exampleJson = "{\n  \"eol\" : \"cycle_eol\",\n  \"releaseDate\" : \"2000-01-23\",\n  \"link\" : \"link\",\n  \"lts\" : true,\n  \"discontinued\" : \"cycle_discontinued\",\n  \"cycle\" : 0.8008281904610115,\n  \"support\" : \"cycle_support\",\n  \"latest\" : \"latest\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Cycle>(exampleJson)
            : default(Cycle);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get All Details
        /// </summary>
        /// <remarks>Get EoL dates of all cycles of a given product.</remarks>
        /// <param name="product">Product URL as per the canonical URL on the endofife.date website</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/api/{product}.json")]
        [ValidateModelState]
        [SwaggerOperation("GetApiProductJson")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Cycle>), description: "OK")]
        public virtual IActionResult GetApiProductJson([FromRoute (Name = "product")][Required]string product)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Cycle>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"eol\" : \"cycle_eol\",\n  \"releaseDate\" : \"2000-01-23\",\n  \"link\" : \"link\",\n  \"lts\" : true,\n  \"discontinued\" : \"cycle_discontinued\",\n  \"cycle\" : 0.8008281904610115,\n  \"support\" : \"cycle_support\",\n  \"latest\" : \"latest\"\n}, {\n  \"eol\" : \"cycle_eol\",\n  \"releaseDate\" : \"2000-01-23\",\n  \"link\" : \"link\",\n  \"lts\" : true,\n  \"discontinued\" : \"cycle_discontinued\",\n  \"cycle\" : 0.8008281904610115,\n  \"support\" : \"cycle_support\",\n  \"latest\" : \"latest\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Cycle>>(exampleJson)
            : default(List<Cycle>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
