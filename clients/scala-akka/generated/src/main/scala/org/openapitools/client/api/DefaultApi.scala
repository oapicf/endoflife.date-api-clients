/**
 * endoflife.date
 * Documentation for the endoflife.date API. The API is currently in Alpha. Additional information about the API can be found on the [endoflife.date wiki](https://github.com/endoflife-date/endoflife.date/wiki)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.AnyType
import org.openapitools.client.model.Cycle
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object DefaultApi {

  def apply(baseUrl: String = "https://endoflife.date") = new DefaultApi(baseUrl)
}

class DefaultApi(baseUrl: String) {

  /**
   * Return a list of all products. Each of these can be used for the other API endpoints.
   *
   * Expected answers:
   *   code 200 : AnyType (OK)
   */
  def getApiAllJson(): ApiRequest[AnyType] =
    ApiRequest[AnyType](ApiMethods.GET, baseUrl, "/api/all.json", "application/json")
      .withSuccessResponse[AnyType](200)


  /**
   * Gets details of a single cycle
   *
   * Expected answers:
   *   code 200 : Cycle (OK)
   *
   * @param product Product URL as per the canonical URL on the endofife.date website
   * @param cycle Release Cycle for which the details must be fetched
   */
  def getApiProductCycleJson(product: AnyType, cycle: AnyType): ApiRequest[Cycle] =
    ApiRequest[Cycle](ApiMethods.GET, baseUrl, "/api/{product}/{cycle}.json", "application/json")
      .withPathParam("product", product)
      .withPathParam("cycle", cycle)
      .withSuccessResponse[Cycle](200)


  /**
   * Get EoL dates of all cycles of a given product.
   *
   * Expected answers:
   *   code 200 : AnyType (OK)
   *
   * @param product Product URL as per the canonical URL on the endofife.date website
   */
  def getApiProductJson(product: AnyType): ApiRequest[AnyType] =
    ApiRequest[AnyType](ApiMethods.GET, baseUrl, "/api/{product}.json", "application/json")
      .withPathParam("product", product)
      .withSuccessResponse[AnyType](200)




}

