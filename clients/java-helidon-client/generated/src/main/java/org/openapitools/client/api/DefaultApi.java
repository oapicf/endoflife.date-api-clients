/**
 * endoflife.date
 * Documentation for the endoflife.date API. The API is currently in Alpha. Additional information about the API can be found on the [endoflife.date wiki](https://github.com/endoflife-date/endoflife.date/wiki).
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.api;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.Set;

import jakarta.ws.rs.*;
import jakarta.ws.rs.core.Response;
import jakarta.ws.rs.core.MediaType;

import org.eclipse.microprofile.rest.client.annotation.RegisterProvider;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;

import org.openapitools.client.model.Cycle;
import java.util.List;
import java.util.Map;

/**
 * endoflife.date
 *
 * <p>Documentation for the endoflife.date API. The API is currently in Alpha. Additional information about the API can be found on the [endoflife.date wiki](https://github.com/endoflife-date/endoflife.date/wiki).
 */
@RegisterRestClient
@RegisterProvider(ApiExceptionMapper.class)
@Path("/api")
public interface DefaultApi  {

    /**
     * All Products
     * Return a list of all products. Each of these can be used for the other API endpoints.
     */
    @GET
    @Path("/all.json")
    @Produces({ "application/json" })
    List<String> getApiAllJson() throws ApiException, ProcessingException;

    /**
     * Single cycle details
     * Gets details of a single cycle.
     */
    @GET
    @Path("/{product}/{cycle}.json")
    @Produces({ "application/json" })
    Cycle getApiProductCycleJson(@PathParam("product") String product, @PathParam("cycle") String cycle) throws ApiException, ProcessingException;

    /**
     * Get All Details
     * Get EoL dates of all cycles of a given product.
     */
    @GET
    @Path("/{product}.json")
    @Produces({ "application/json" })
    List<Cycle> getApiProductJson(@PathParam("product") String product) throws ApiException, ProcessingException;
}
