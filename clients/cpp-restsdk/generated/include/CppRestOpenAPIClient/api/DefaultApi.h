/**
 * endoflife.date
 * Documentation for the endoflife.date API. The API is currently in Alpha. Additional information about the API can be found on the [endoflife.date wiki](https://github.com/endoflife-date/endoflife.date/wiki)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.0.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DefaultApi.h
 *
 *
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_DefaultApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_DefaultApi_H_



#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/AnyType.h"
#include "CppRestOpenAPIClient/model/Cycle.h"
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  DefaultApi
{
public:

    explicit DefaultApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~DefaultApi();

    /// <summary>
    /// All Products
    /// </summary>
    /// <remarks>
    /// Return a list of all products. Each of these can be used for the other API endpoints.
    /// </remarks>
    pplx::task<std::shared_ptr<AnyType>> getApiAll_json(
    ) const;
    /// <summary>
    /// Single cycle details
    /// </summary>
    /// <remarks>
    /// Gets details of a single cycle
    /// </remarks>
    /// <param name="product">Product URL as per the canonical URL on the endofife.date website</param>
    /// <param name="cycle">Release Cycle for which the details must be fetched</param>
    pplx::task<std::shared_ptr<Cycle>> getApiProductCycle_json(
        std::shared_ptr<AnyType> product,
        std::shared_ptr<AnyType> cycle
    ) const;
    /// <summary>
    /// Get All Details
    /// </summary>
    /// <remarks>
    /// Get EoL dates of all cycles of a given product.
    /// </remarks>
    /// <param name="product">Product URL as per the canonical URL on the endofife.date website</param>
    pplx::task<std::shared_ptr<AnyType>> getApiProduct_json(
        std::shared_ptr<AnyType> product
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_DefaultApi_H_ */

