/**
 * endoflife.date
 * Documentation for the endoflife.date API. The API is currently in Alpha. Additional information about the API can be found on the [endoflife.date wiki](https://github.com/endoflife-date/endoflife.date/wiki)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CycleCycle from './CycleCycle';
import CycleDiscontinued from './CycleDiscontinued';
import CycleEol from './CycleEol';
import CycleLts from './CycleLts';
import CycleSupport from './CycleSupport';

/**
 * The Cycle model module.
 * @module model/Cycle
 * @version 0.10.1-pre.0
 */
class Cycle {
    /**
     * Constructs a new <code>Cycle</code>.
     * Details of a single release cycle of a given product. There might be some slight variations to this depending on the product.
     * @alias module:model/Cycle
     */
    constructor() { 
        
        Cycle.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Cycle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Cycle} obj Optional instance to populate.
     * @return {module:model/Cycle} The populated <code>Cycle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Cycle();

            if (data.hasOwnProperty('cycle')) {
                obj['cycle'] = CycleCycle.constructFromObject(data['cycle']);
            }
            if (data.hasOwnProperty('releaseDate')) {
                obj['releaseDate'] = ApiClient.convertToType(data['releaseDate'], 'Date');
            }
            if (data.hasOwnProperty('eol')) {
                obj['eol'] = CycleEol.constructFromObject(data['eol']);
            }
            if (data.hasOwnProperty('latest')) {
                obj['latest'] = ApiClient.convertToType(data['latest'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('lts')) {
                obj['lts'] = CycleLts.constructFromObject(data['lts']);
            }
            if (data.hasOwnProperty('support')) {
                obj['support'] = CycleSupport.constructFromObject(data['support']);
            }
            if (data.hasOwnProperty('discontinued')) {
                obj['discontinued'] = CycleDiscontinued.constructFromObject(data['discontinued']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Cycle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Cycle</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cycle`
        if (data['cycle']) { // data not null
          CycleCycle.validateJSON(data['cycle']);
        }
        // validate the optional field `eol`
        if (data['eol']) { // data not null
          CycleEol.validateJSON(data['eol']);
        }
        // ensure the json data is a string
        if (data['latest'] && !(typeof data['latest'] === 'string' || data['latest'] instanceof String)) {
            throw new Error("Expected the field `latest` to be a primitive type in the JSON string but got " + data['latest']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // validate the optional field `lts`
        if (data['lts']) { // data not null
          CycleLts.validateJSON(data['lts']);
        }
        // validate the optional field `support`
        if (data['support']) { // data not null
          CycleSupport.validateJSON(data['support']);
        }
        // validate the optional field `discontinued`
        if (data['discontinued']) { // data not null
          CycleDiscontinued.validateJSON(data['discontinued']);
        }

        return true;
    }


}



/**
 * @member {module:model/CycleCycle} cycle
 */
Cycle.prototype['cycle'] = undefined;

/**
 * Release Date for the first release in this cycle
 * @member {Date} releaseDate
 */
Cycle.prototype['releaseDate'] = undefined;

/**
 * @member {module:model/CycleEol} eol
 */
Cycle.prototype['eol'] = undefined;

/**
 * Latest release in this cycle
 * @member {String} latest
 */
Cycle.prototype['latest'] = undefined;

/**
 * Link to changelog for the latest release, if available
 * @member {String} link
 */
Cycle.prototype['link'] = undefined;

/**
 * @member {module:model/CycleLts} lts
 */
Cycle.prototype['lts'] = undefined;

/**
 * @member {module:model/CycleSupport} support
 */
Cycle.prototype['support'] = undefined;

/**
 * @member {module:model/CycleDiscontinued} discontinued
 */
Cycle.prototype['discontinued'] = undefined;






export default Cycle;

