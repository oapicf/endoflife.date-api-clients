# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct DefaultApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `DefaultApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ DefaultApi }) = "https://endoflife.date"

const _returntypes_get_api_all_json_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{String},
)

function _oacinternal_get_api_all_json(_api::DefaultApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_api_all_json_DefaultApi, "/api/all.json", [])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""All Products

Return a list of all products. Each of these can be used for the other API endpoints.

Params:

Return: Vector{String}, OpenAPI.Clients.ApiResponse
"""
function get_api_all_json(_api::DefaultApi; _mediaType=nothing)
    _ctx = _oacinternal_get_api_all_json(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_api_all_json(_api::DefaultApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_get_api_all_json(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_api_product_cycle_json_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Cycle,
)

function _oacinternal_get_api_product_cycle_json(_api::DefaultApi, product::String, cycle::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_api_product_cycle_json_DefaultApi, "/api/{product}/{cycle}.json", [])
    OpenAPI.Clients.set_param(_ctx.path, "product", product)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "cycle", cycle)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Single cycle details

Gets details of a single cycle.

Params:
- product::String (required)
- cycle::String (required)

Return: Cycle, OpenAPI.Clients.ApiResponse
"""
function get_api_product_cycle_json(_api::DefaultApi, product::String, cycle::String; _mediaType=nothing)
    _ctx = _oacinternal_get_api_product_cycle_json(_api, product, cycle; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_api_product_cycle_json(_api::DefaultApi, response_stream::Channel, product::String, cycle::String; _mediaType=nothing)
    _ctx = _oacinternal_get_api_product_cycle_json(_api, product, cycle; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_api_product_json_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Cycle},
)

function _oacinternal_get_api_product_json(_api::DefaultApi, product::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_api_product_json_DefaultApi, "/api/{product}.json", [])
    OpenAPI.Clients.set_param(_ctx.path, "product", product)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get All Details

Get EoL dates of all cycles of a given product.

Params:
- product::String (required)

Return: Vector{Cycle}, OpenAPI.Clients.ApiResponse
"""
function get_api_product_json(_api::DefaultApi, product::String; _mediaType=nothing)
    _ctx = _oacinternal_get_api_product_json(_api, product; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_api_product_json(_api::DefaultApi, response_stream::Channel, product::String; _mediaType=nothing)
    _ctx = _oacinternal_get_api_product_json(_api, product; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export get_api_all_json
export get_api_product_cycle_json
export get_api_product_json
