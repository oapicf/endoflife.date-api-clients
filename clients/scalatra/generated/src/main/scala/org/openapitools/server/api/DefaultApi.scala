/**
 * endoflife.date
 * Documentation for the endoflife.date API. The API is currently in Alpha. Additional information about the API can be found on the [endoflife.date wiki](https://github.com/endoflife-date/endoflife.date/wiki)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */


package org.openapitools.server.api

import org.openapitools.server.model.Cycle

import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class DefaultApi(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "DefaultApi"

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val getApiAllJsonOperation = (apiOperation[List[String]]("getApiAllJson")
    summary "All Products"
    parameters()
  )

  get("/api/all.json", operation(getApiAllJsonOperation)) {
  }

  

  val getApiProductCycleJsonOperation = (apiOperation[Cycle]("getApiProductCycleJson")
    summary "Single cycle details"
    parameters(pathParam[String]("product").description(""), pathParam[String]("cycle").description(""))
  )

  get("/api/:product/{cycle}.json", operation(getApiProductCycleJsonOperation)) {
    val product = params.getOrElse("product", halt(400))
    //println("product: " + product)
    val cycle = params.getOrElse("cycle", halt(400))
    //println("cycle: " + cycle)
  }

  

  val getApiProductJsonOperation = (apiOperation[List[Cycle]]("getApiProductJson")
    summary "Get All Details"
    parameters(pathParam[String]("product").description(""))
  )

  get("/api/{product}.json", operation(getApiProductJsonOperation)) {
    val product = params.getOrElse("product", halt(400))
    //println("product: " + product)
  }

}
